buildscript {
	ext {
		kotlinVersion = '1.2.41'
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("com.epages:restdocs-api-spec-gradle-plugin:0.9.5")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.epages.restdocs-api'

group = 'com.myservice'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
	maven {
		url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/'
	}
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-cassandra-reactive')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
	implementation('org.jetbrains.kotlin:kotlin-reflect')
	implementation('com.github.fge:json-patch:1.9')
    implementation('org.springframework:spring-aspects:5.2.1.RELEASE')
	implementation('com.google.code.gson:gson:2.8.6')
	implementation('com.epages:resdocs-api-spec:0.9.5')
	implementation('com.epages:resdocs-api-spec-webtestclient:0.9.5')

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.5.0')
	testImplementation('io.projectreactor:reactor-test')
	testImplementation('io.mockk:mockk:1.9.3')
	testImplementation('com.ninja-squad:springmockk:1.1.3')

	testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.5.0')
}

test {
	useJUnitPlatform()
}

openapi3 {
	title = "Person API"
	version = "$version"
	format = "json"
	server = "/"
}